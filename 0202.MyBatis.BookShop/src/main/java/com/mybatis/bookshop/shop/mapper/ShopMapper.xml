<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.bookshop.shop.mapper.ShopMapper"><!--정의해둔  interface 패키지  -->
	
	
	<!-- List<T>를 반환받는 쿼리에 지정해줄 resultMap 정의-->
	<!-- type은 mybatis config 파일에 등록한 typeAliases id값으로 대체 가능(별칭등록해서 풀패키지표현이 아닌 짧은 표현 사용)  -->
	<resultMap type="Customer" id="CusotomerResult">
		<id property="customerid" column="customerid"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="postcode" column="postcode"/>
		<result property="address" column="address"/>
		<result property="address2" column="address2"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
	</resultMap>
	
	<resultMap type="Book" id="BookResult">
		<id property="bookid" column="bookid"/>
		<result property="bookName" column="bookName"/>
		<result property="publisher" column="publisher"/>
		<result property="price" column="price"/>
		<result property="description" column="description"/>
	</resultMap>
	
	<!-- 관련 테이블의 참조형 데이터를 가져오는 경우: 테이블 조인 -->
	<!-- association 태그 사용. -->
	<!-- property: 넣을변수명(result태그와 동일), column: 참조될 테이블을 검색할 본 테이블의 컬럼명(foreign key가 유력): select에 지정될 select쿼리에 인수로 전달된다. -->
	<!-- select: 조인될 테이블의 쿼리를 정의한 select태그의 id값 -->
	<resultMap type="OrderItem" id="OrderItemResult">
		<id property="orderItemid" column="orderItemid"/>
		<result property="quantity" column="quantity"/>
		<association property="book" column="bookid"
			select="com.mybatis.bookshop.shop.mapper.ShopMapper.findByBookId"/>
	</resultMap>
	
	<resultMap type="Order" id="OrderResult">
		<id property="orderid" column="orderid"/>
		<result property="orderDate" column="orderDate" javaType="java.sql.Date"/>
		<result property="amount" column="amount"/>
		<result property="sendYN" column="sendYN"/>
		<result property="payOption" column="payOption"/>
		<association property="customer" column="customerid"
			select="com.mybatis.bookshop.customer.mapper.CustomerMapper.findByCustomerId"/>
		<collection property="orderItemList" column="orderid" 
			ofType="OrderItem" select="com.mybatis.bookshop.shop.mapper.ShopMapper.findByOrderIdFromOrderItem"/>
	</resultMap>
	
		
	<select id="findByBookId" parameterType="int" resultMap="BookResult">
		SELECT * FROM BOOK WHERE BOOKID=#{bookid}
	</select>	
	
	<!-- order 목록 검색 시작 -->
	<select id="findByOrderId" parameterType="int" resultMap="OrderResult">
		SELECT * FROM ORDERS WHERE ORDERID=#{orderid}
	</select>
	
	<select id="findByOrderCondition"  parameterType="OrderCondition" resultMap="OrderResult">
		SELECT * FROM ORDERS WHERE CUSTOMERID=#{customerid} 
		<if test="orderDateLimit gt 0">
		AND ORDERDATE >= ADD_MONTHS(SYSDATE,-#{orderDateLimit})
		</if>
	</select>
	
	<select id="findByOrderItemId" parameterType="int" resultMap="OrderItemResult">
		SELECT * FROM ORDERITEM WHERE ORDERITEMID=#{orderItemid}
	</select>
	
	<select id="findByOrderIdFromOrderItem" parameterType="int" resultMap="OrderItemResult">
		SELECT * FROM ORDERITEM WHERE ORDERID=#{orderid}
	</select>
	<!-- order 목록 검색 끝 -->
		
	<insert id="insertBookInfo" parameterType="Book">
		<selectKey keyProperty="bookid" resultType="int" order="BEFORE">
			SELECT SEQ_BOOK.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOOK 
		(BOOKID, BOOKNAME, PUBLISHER, PRICE, DESCRIPTION)
		VALUES(#{bookid}, #{bookName}, #{publisher}, #{price}, #{description})
	</insert>
	
	<select id="findByBookCondition" parameterType="BookCondition" resultMap="BookResult">
		SELECT * FROM BOOK WHERE 1=1
		<if test="bookName!=null and !bookName.equals('')">
		AND BOOKNAME like #{bookName}
		</if>
		<if test="publisher!=null and !publisher.equals('')">
		AND PUBLISHER like #{publisher}
		</if>
		<if test="priceMin!=null">
		AND PRICE  &gt;= #{priceMin}
		</if>
		<if test="priceMax!=null">
		AND PRICE  &lt;= #{priceMax}
		</if>
		ORDER BY BOOKID DESC
	</select>
	
	<insert id="insertOrder" parameterType="Order">
		<selectKey keyProperty="orderid" resultType="int" order="BEFORE">
			SELECT SEQ_ORDERS.NEXTVAL FROM DUAL
		</selectKey>
		INSERT ALL 
		INTO ORDERS 
		VALUES(#{orderid},SYSDATE,#{amount},#{sendYN},#{payOption},#{customer.customerid})
		
		<foreach item="orderItem" collection="orderItemList" close="SELECT * FROM DUAL">
			INTO ORDERITEM VALUES (
			#{orderItem.orderItemid},
			#{orderItem.quantity},
			#{orderItem.book.bookid},
			#{orderid})
		</foreach>
	</insert>
	
	<select id="getNextvalFromOrderItemSeq" resultType="int">
		SELECT SEQ_ORDERITEM.NEXTVAL NEXTORDERITEMID FROM DUAL
	</select>
</mapper>