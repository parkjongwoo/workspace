<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.customer.mapper.CustomerMapper"><!--정의해둔  interface 패키지  -->
	
	
	<!-- List<T>를 반환받는 쿼리에 지정해줄 resultMap 정의-->
	<!-- type은 mybatis config 파일에 등록한 typeAliases id값으로 대체 가능(별칭등록해서 풀패키지표현이 아닌 짧은 표현 사용)  -->
	<resultMap type="Customer" id="CusotomerResult">
		<id property="customerid" column="customerid"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="postcode" column="postcode"/>
		<result property="address" column="address"/>
		<result property="address2" column="address2"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
	</resultMap>
	
	<!-- Mapper interface에 작성된 findAll method에 대응하는 쿼리문. 쿼리결과는 CusotomerResult에 작성된 매칭을 참고하여 결과를 생성한다.  -->
	<select id="findAll" resultMap="CusotomerResult">
		SELECT * FROM CUSTOMER ORDER BY CUSTOMERID DESC
	</select>
	
	<select id="findByCustomerId" parameterType="int" resultType="Customer">
		SELECT * FROM CUSTOMER WHERE CUSTOMERID=#{customerid}
	</select>
	
	<select id="findById" parameterType="String" resultType="Customer">
		SELECT * FROM CUSTOMER WHERE ID=#{id}
	</select>
	
	<select id="findbyName" parameterType="String" resultMap="CusotomerResult">
		SELECT * FROM CUSTOMER WHERE NAME LIKE #{name}
	</select>
	
	<select id="findCntById" parameterType="String" resultType="int">
		SELECT count(*) cnt FROM CUSTOMER WHERE ID=#{id}
	</select>
	
	<insert id="save" parameterType="Customer">
		<selectKey keyProperty="customerid" resultType="int" order="BEFORE">
			SELECT SEQ_CUSTOMER_ID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO CUSTOMER 
		(CUSTOMERID, ID, NAME, PASSWORD, POSTCODE, ADDRESS, ADDRESS2, PHONE, EMAIL)
		VALUES(#{customerid}, #{id}, #{name}, #{password}, #{postcode}, #{address}, #{address2}, #{phone}, #{email})
	</insert>
	
	<update id="modify" parameterType="Customer">
		UPDATE CUSTOMER SET 
		ID=#{id}, NAME=#{name}, PASSWORD=#{password}, POSTCODE=#{postcode}, 
		ADDRESS=#{address}, ADDRESS2=#{address2}, PHONE=#{phone}, EMAIL=#{email} WHERE CUSTOMERID=#{customerid}
	</update>
	
	<delete id="remove" parameterType="int">
		DELETE FROM CUSTOMER WHERE CUSTOMERID=#{customerid}
	</delete>
	
	<!-- 페이징 처리 -->
	<select id="findCount" resultType="int">
		SELECT COUNT(*) AS COUNT FROM CUSTOMER 
	</select>
	
	
	<!-- interface 에 정의한 rowbounds는 mybatis에서 처리하므로 개발자가 추가할 쿼리는 없음 -->
	<select id="findByPage" resultMap="CusotomerResult">
		SELECT * FROM CUSTOMER ORDER BY CUSTOMERID DESC
	</select>
</mapper>